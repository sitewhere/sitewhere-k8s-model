buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
 	}
	dependencies {
		classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
	}
}

apply plugin: 'distribution'

ext['fabric8.version'] = '4.6.0'
    
allprojects {
    group = 'com.sitewhere'
	version = '0.0.2'
	
    repositories {
        maven { url "http://repo.maven.apache.org/maven2" }
		mavenLocal()
    }
	apply plugin: 'eclipse'
	
	apply plugin: "com.github.hierynomus.license"
	license {
		header rootProject.file('HEADER')
    	include "**/*.java"
	}
 	
 	// Choose Java settings.
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
	// Library dependencies.
    dependencies {
		compile group: 'io.fabric8', name: 'kubernetes-client', version: "${rootProject.ext['fabric8.version']}"
		
        testCompile group: 'junit', name: 'junit'
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

// Publish jar.	
apply plugin: 'maven-publish'
publishing {
	publications {
		mavenJava(MavenPublication) {
		    from components.java
            artifact sourcesJar
            artifact javadocJar
			pom {
			    name = 'SiteWhere Kubernetes Model'
			    description = 'SiteWhere Kubernetes Entity Model'
			    url = 'http://sitewhere.io'
			    licenses {
			        license {
			            name = 'CPAL-1.0'
			            url = 'https://opensource.org/licenses/CPAL-1.0'
			        }
			    }
                developers {
                    developer {
                        id = 'admin'
                        name = 'SiteWhere Admin'
                        email = 'admin@sitewhere.com'
                    }
                }
                scm {
                    connection = 'https://github.com//sitewhere/sitewhere-k8s-model.git'
                    url = 'https://github.com//sitewhere/sitewhere-k8s-model'
                }
			}	
		}
	}
    repositories {
        maven {
            url project.nexusUrl
            credentials {
                username project.nexusUsername
                password project.nexusPassword
            }
        }
    }
}

apply plugin: 'signing'
signing {
    sign publishing.publications.mavenJava
}
